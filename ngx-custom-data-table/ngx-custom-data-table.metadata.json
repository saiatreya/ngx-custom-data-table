{"__symbolic":"module","version":4,"metadata":{"NgxCustomDataTableComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":2,"character":1},"arguments":[{"selector":"ngx-custom-data-table","template":"\n    <div class=\"p-col-12 margin-top-24\" *ngIf=\"!noActions && !onlyDelete\">\n    <button class=\"button-primary\" pButton type=\"button\" label=\"+ Add\"\n        (click)=\"addNew()\"></button>\n</div>\n<p-table #itemTable [sortField]=\"sortKey\" [sortOrder]=\"sortOrder\" [selectionMode]=\"enableSelection ? 'single' : ''\"\n    [(selection)]=\"choosenItems\" [rowHover]=\"true\" [value]=\"items\" [scrollable]=\"true\" scrollHeight=\"300px\"\n    class=\"items-table\" *ngIf=\"items?.length > 0;else noDataAv\"\n    (onRowSelect)=\"radioSelectedValue = $event;selectValue()\" (onRowUnselect)=\"radioSelectedValue='';selectValue()\">\n    <ng-template pTemplate=\"header\">\n        <tr>\n            <th *ngIf=\"showCheckBox\" style=\"width: 3em\"></th>\n            <th *ngIf=\"!noActions\">Actions</th>\n            <ng-container *ngFor=\"let obj of itemObj\">\n                <th *ngIf=\"!obj.hide && obj.type !== 'dropdown'\" [pSortableColumn]=\"obj.key\"\n                    [style.width]=\"obj.width + 'em'\">\n                    {{obj.value}} <p-sortIcon [field]=\"obj.key\"></p-sortIcon>\n                </th>\n                <th *ngIf=\"obj.type === 'dropdown'\" [innerHTML]=\"obj.value\"></th>\n            </ng-container>\n        </tr>\n        <tr>\n            <th *ngIf=\"showCheckBox\" style=\"width: 3em\">\n                <p-tableHeaderCheckbox *ngIf=\"!hideHeaderCheckBox\"></p-tableHeaderCheckbox>\n            </th>\n            <th *ngIf=\"!noActions\"></th>\n            <ng-container *ngFor=\"let obj of itemObj\">\n                <th *ngIf=\"!obj.hide && !noHeaderDropdown\" [style.width]=\"obj.width + 'em'\">\n                    <p-dropdown *ngIf=\"obj.type!=='multi-select'\" appendTo=\"body\" [filter]=\"true\"\n                        (onChange)=\"itemTable.filter($event.value ? $event.value[obj.key] : '', obj?.key, 'contains')\"\n                        [options]=\"filterDuplicates(items,obj.key, obj.keySet)\"\n                        placeholder=\"{{'Search By ' + obj.value}}\"\n                        [optionLabel]=\"obj.key\" [showClear]=\"true\">\n                    </p-dropdown>\n                </th>\n            </ng-container>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-item let-rowIndex=\"rowIndex\">\n        <tr class=\"text-center\" [pSelectableRow]=\"item\" [pSelectableRowDisabled]=\"item?.disableCheckbox\" *ngIf=\"item\">\n            <ng-container *ngIf=\"!item?.tempId;else newInput\">\n                <ng-container *ngIf=\"editItems.indexOf(item[uniqKey]) === -1;else showInput\">\n                    <td *ngIf=\"!noActions\">\n                        <p-radioButton class=\"radio-button\" *ngIf=\"showRadioInRows\" name=\"groupname\" [value]=\"item\"\n                            [(ngModel)]=\"radioSelectedValue\" (onClick)=\"selectValue()\"></p-radioButton>\n                        <button\n                            *ngIf=\"!onlyDelete\"\n                            pButton type=\"button\" icon=\"pi pi-pencil\" class=\"ui-button-info\"\n                            (click)=\"editRowItems(item)\"></button>\n                        <button pButton\n                            type=\"button\" icon=\"pi pi-trash\" class=\"ui-button-danger\"\n                            (click)=\"deleteItem(item[uniqKey])\"></button>\n                    </td>\n                    <td *ngIf=\"showCheckBox\" style=\"width: 3em\">\n                        <p-tableCheckbox [escape]=\"false\" [pTooltip]=\"item?.tooltipMsg\" [value]=\"item\"\n                            [disabled]=\"item?.disableCheckbox\">\n                        </p-tableCheckbox>\n                    </td>\n                    <ng-container *ngFor=\"let obj of itemObj\">\n                        <ng-container *ngIf=\"!obj.hide\">\n                            <td *ngIf=\"obj.keySet;else noSet\" [style.width]=\"obj.width + 'em'\">\n                                <div *ngFor=\"let set of item[obj?.key];let setInx = index;\" class=\"set-content\">\n                                    <span title=\"{{set}}\" class=\"ellipsis-content\">\n                                        {{set}}\n                                    </span>\n                                    <i title=\"Assignee info\" class=\"pi pi-info-circle\"\n                                        (click)=\"selectInfo(item[obj?.keySet][setInx],item)\"></i>\n                                </div>\n                            </td>\n                            <ng-template #noSet>\n                                <td [class.link]=\"obj.link\" *ngIf=\"obj.type!=='multi-select' && obj.type!=='dropdown'\"\n                                    (click)=\"obj?.action ? selectLink(item,$event) : ''\"\n                                    [style.width]=\"obj.width + 'em'\">\n                                    {{obj?.date ? (item[obj?.key] | date: 'dd MMM yyyy, HH:mm') : item[obj?.key]}}</td>\n                                <td *ngIf=\"obj.type==='multi-select'\" [style.width]=\"obj.width + 'em'\">\n                                    <div *ngFor=\"let option of item[obj.key]\">{{option.name}}</div>\n                                </td>\n                                <td *ngIf=\"obj.type === 'dropdown'\"\n                                    [class.changed]=\"item[obj.key + ',prevKeyVal'] && item[obj.key + ',prevKeyVal'] !== item[obj.key]\"\n                                    [style.width]=\"obj.width + 'em'\">\n                                    <p-dropdown (onChange)=\"item[obj.key] = $event?.originalEvent?.target?.innerText\"\n                                        [options]=\"profilesList\" *ngIf=\"obj.type==='dropdown'\"\n                                        placeholder=\"{{item[obj.key]}}\" [ngModel]=\"item[obj.key]\"\n                                        id=\"{{obj.key + '' + rowIndex}}\" required=\"true\" [autoWidth]=\"false\"\n                                        appendTo=\"body\">\n                                    </p-dropdown>\n                                </td>\n                            </ng-template>\n                        </ng-container>\n                    </ng-container>\n                </ng-container>\n            </ng-container>\n            <ng-template #newInput>\n                <td>\n                    <button pButton type=\"button\" icon=\"pi pi-check\" class=\"ui-button-success\"\n                        (click)=\"addNewItem(item)\"></button>\n                    <button pButton type=\"button\" icon=\"pi pi-times\" class=\"ui-button-danger\"\n                        (click)=\"removeRow(item)\"></button>\n                </td>\n                <ng-container *ngFor=\"let obj of itemObj;let index = index\">\n                    <ng-container *ngIf=\"!obj.hide\">\n                        <td *ngIf=\"obj.type!=='multi-select'\" [style.width]=\"obj.width + 'em'\">\n                            <div *ngIf=\"autoGenerateId && obj.key === uniqKey;else notAutoGenerTemp\">{{item[uniqKey]}}\n                            </div>\n                            <ng-template #notAutoGenerTemp>\n                                <input (keyup.enter)=\"addNewItem(item)\" *ngIf=\"obj.type!='drop-down'\" type=\"text\"\n                                    id=\"{{obj.key + '' + index}}\" pInputText [(ngModel)]=\"item[obj.key]\"\n                                    placeholder=\"{{'Please Enter ' + obj.value}}\">\n                                <p-dropdown [options]=\"obj.values || profilesList\" *ngIf=\"obj.type==='drop-down'\"\n                                    id=\"{{obj.key + '' + rowIndex}}\"\n                                    placeholder=\"{{'Please Enter ' + obj.value}}\"\n                                    required=\"true\" [(ngModel)]=\"item[obj.key]\"\n                                    [optionLabel]=\"obj.values?.length > 0 ? 'label' : 'profileName'\" [autoWidth]=\"false\"\n                                    appendTo=\"body\">\n                                </p-dropdown>\n                            </ng-template>\n                        </td>\n                        <td *ngIf=\"obj.type==='multi-select'\" [style.width]=\"obj.width + 'em'\">\n                            <p-multiSelect filter=\"true\" multiple=\"true\" appendTo=\"body\" checkbox=\"true\"\n                                [options]=\"obj.values\"\n                                [(ngModel)]=\"item[obj.key]\" optionLabel=\"name\">\n                            </p-multiSelect>\n                        </td>\n                    </ng-container>\n                </ng-container>\n            </ng-template>\n            <ng-template #showInput>\n                <td>\n                    <button pButton type=\"button\" icon=\"pi pi-check\" class=\"ui-button-success\"\n                        (click)=\"updateItem(item)\"></button>\n                    <button pButton type=\"button\" icon=\"pi pi-times\" class=\"ui-button-danger\"\n                        (click)=\"editCancel(item)\"></button>\n                </td>\n                <ng-container *ngFor=\"let obj of itemObj;let first = first\">\n                    <ng-container *ngIf=\"!obj.hide\">\n                        <td *ngIf=\"uniqKey === obj?.key\" [style.width]=\"obj.width + 'em'\">{{item[obj?.key]}}</td>\n                        <td *ngIf=\"uniqKey !== obj?.key && obj.type!=='multi-select'\" [style.width]=\"obj.width + 'em'\">\n                            <input (keyup.enter)=\"updateItem(item)\" *ngIf=\"obj.type!='drop-down'\" type=\"text\"\n                                id=\"{{obj.key + '' + rowIndex}}\" pInputText\n                                placeholder=\"{{'Please Enter ' + obj.value}}\"\n                                [(ngModel)]=\"item[obj.key]\">\n                            <p-dropdown [options]=\"obj.values || profilesList\" *ngIf=\"obj.type==='drop-down'\"\n                                placeholder=\"{{item[obj.key]}}\" id=\"{{obj.key + '' + rowIndex}}\"\n                                [(ngModel)]=\"item[obj.key]\" required=\"true\"\n                                [optionLabel]=\"obj.values?.length > 0 ? 'label' : 'profileName'\" [autoWidth]=\"false\"\n                                appendTo=\"body\">\n                            </p-dropdown>\n                        </td>\n                        <td *ngIf=\"obj.type==='multi-select'\" [style.width]=\"obj.width + 'em'\">\n                            <p-multiSelect filter=\"true\" multiple=\"true\" appendTo=\"body\" checkbox=\"true\"\n                                [options]=\"obj.values\" [(ngModel)]=\"item[obj.key]\" optionLabel=\"name\">\n                            </p-multiSelect>\n                        </td>\n                    </ng-container>\n                </ng-container>\n            </ng-template>\n        </tr>\n    </ng-template>\n</p-table>\n<div class=\"p-col-12\" [ngClass]=\"{'text-right': btnContents?.length > 1, 'text-center': btnContents?.length === 1}\"\n    *ngIf=\"btnContents?.length > 0\">\n    <ng-container *ngFor=\"let btn of btnContents\">\n        <button class=\"button-{{btn.styleClass}} btn-{{btn.width}}\" pButton type=\"button\"\n            label=\"{{btn.btnName}}\" (click)=\"btn.cancel ? cancelCheck() : saveItems()\"></button>\n    </ng-container>\n</div>\n<ng-template #noDataAv>\n    <div class=\"text-center no-data-content\">\n        No Data available\n    </div>\n</ng-template>\n  ","styles":["\n    .radio-button {\n      margin-right: 10px;\n    }\n    .link {\n        color: #116fbf;\n    }\n    .ui-state-highlight {\n        .link {\n            color: #fff;\n        }\n    }\n    .set-content {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        i {\n            font-size: 24px;\n            color: #ffcc33;\n        }\n    }\n    "]}]}],"members":{"uniqKey":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":206,"character":3}}]}],"autoGenerateId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":207,"character":3}}]}],"keyOptional":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":208,"character":3}}]}],"showRadioInRows":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":209,"character":3}}]}],"showCheckBox":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":210,"character":3}}]}],"noActions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":211,"character":3}}]}],"enableSelection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":212,"character":3}}]}],"onlyDelete":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":213,"character":3}}]}],"sortOrder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":214,"character":3}}]}],"sortKey":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":215,"character":3}}]}],"hideHeaderCheckBox":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":216,"character":3}}]}],"btnContents":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":217,"character":3}}]}],"noHeaderDropdown":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":218,"character":3}}]}],"selectionChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":219,"character":3}}]}],"tableList":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":224,"character":3}}]}],"tableKeysList":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":241,"character":3}}]}],"tableProfileList":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":245,"character":3}}]}],"selectedValueEmit":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":248,"character":3}}]}],"confirmAdd":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":249,"character":3}}]}],"confirmUpdate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":250,"character":3}}]}],"selectedLinkEmit":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":251,"character":3}}]}],"confirmDelete":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":252,"character":3}}]}],"closeDialog":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":253,"character":3}}]}],"saveChoosenValues":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":254,"character":3}}]}],"selectInfoEmit":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":255,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"addNewItem":[{"__symbolic":"method"}],"filterDuplicates":[{"__symbolic":"method"}],"emailValidation":[{"__symbolic":"method"}],"dropdownValidation":[{"__symbolic":"method"}],"editCancel":[{"__symbolic":"method"}],"updateItem":[{"__symbolic":"method"}],"checkEmptyFields":[{"__symbolic":"method"}],"removeRow":[{"__symbolic":"method"}],"editRowItems":[{"__symbolic":"method"}],"deleteItem":[{"__symbolic":"method"}],"getNextGroupId":[{"__symbolic":"method"}],"addNew":[{"__symbolic":"method"}],"selectValue":[{"__symbolic":"method"}],"selectInfo":[{"__symbolic":"method"}],"selectLink":[{"__symbolic":"method"}],"saveItems":[{"__symbolic":"method"}],"cancelCheck":[{"__symbolic":"method"}]}},"NgxCustomDataTableModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":12,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"NgxCustomDataTableComponent"}],"imports":[{"__symbolic":"reference","module":"primeng/radiobutton","name":"RadioButtonModule","line":15,"character":4},{"__symbolic":"reference","module":"primeng/table","name":"TableModule","line":16,"character":4},{"__symbolic":"reference","module":"primeng/tooltip","name":"TooltipModule","line":17,"character":4},{"__symbolic":"reference","module":"primeng/dropdown","name":"DropdownModule","line":18,"character":4},{"__symbolic":"reference","module":"primeng/checkbox","name":"CheckboxModule","line":19,"character":4},{"__symbolic":"reference","module":"primeng/multiselect","name":"MultiSelectModule","line":20,"character":4},{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":21,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":22,"character":4},{"__symbolic":"reference","module":"primeng/button","name":"ButtonModule","line":23,"character":4}],"exports":[{"__symbolic":"reference","name":"NgxCustomDataTableComponent"}]}]}],"members":{}}},"origins":{"NgxCustomDataTableComponent":"./lib/ngx-custom-data-table.component","NgxCustomDataTableModule":"./lib/ngx-custom-data-table.module"},"importAs":"ngx-custom-data-table"}