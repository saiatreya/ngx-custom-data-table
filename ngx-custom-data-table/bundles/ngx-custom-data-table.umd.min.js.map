{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-custom-data-table/lib/ngx-custom-data-table.component.ts","ng://ngx-custom-data-table/lib/ngx-custom-data-table.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","NgxCustomDataTableComponent","radioSelectedValue","uniqKey","autoGenerateId","keyOptional","showRadioInRows","showCheckBox","noActions","enableSelection","onlyDelete","sortOrder","sortKey","hideHeaderCheckBox","btnContents","noHeaderDropdown","selectedValueEmit","EventEmitter","confirmAdd","confirmUpdate","selectedLinkEmit","confirmDelete","closeDialog","saveChoosenValues","selectInfoEmit","rowObj","editItems","clonedItems","items","itemObj","rowInx","addNewItems","newItem","choosenItems","profilesList","defineProperty","val","_this","filter","x","editCancel","newInx","findIndex","itemInx","tempId","splice","chosen","ngOnInit","forEach","key","addNewItem","item","emit","filterDuplicates","keySet","noDuplicates","Array","isArray","from","Set","map","obj","emailValidation","isEmail","find","email","emailVal","test","dropdownValidation","rowToCancel","indexOf","index","updateItem","checkEmptyFields","checkEmpty","values","keys","removeRow","editRowItems","cloned","deleteItem","id","getNextGroupId","maxGroupId","isNaN","addNew","unshift","selectValue","selectInfo","set","selectedItem","selectLink","$event","stopPropagation","saveItems","cancelCheck","Component","args","selector","template","Input","Output","NgxCustomDataTableModule","NgModule","declarations","imports","RadioButtonModule","TableModule","TooltipModule","DropdownModule","CheckboxModule","MultiSelectModule","CommonModule","FormsModule","ButtonModule","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'ngx-custom-data-table',\n  template: `\n    <div class=\"p-col-12 margin-top-24\" *ngIf=\"!noActions && !onlyDelete\">\n    <button class=\"button-primary\" pButton type=\"button\" label=\"+ Add\"\n        (click)=\"addNew()\"></button>\n</div>\n<p-table #itemTable [sortField]=\"sortKey\" [sortOrder]=\"sortOrder\" [selectionMode]=\"enableSelection ? 'single' : ''\"\n    [(selection)]=\"choosenItems\" [rowHover]=\"true\" [value]=\"items\" [scrollable]=\"true\" scrollHeight=\"300px\"\n    class=\"items-table\" *ngIf=\"items?.length > 0;else noDataAv\"\n    (onRowSelect)=\"radioSelectedValue = $event;selectValue()\" (onRowUnselect)=\"radioSelectedValue='';selectValue()\">\n    <ng-template pTemplate=\"header\">\n        <tr>\n            <th *ngIf=\"showCheckBox\" style=\"width: 3em\"></th>\n            <th *ngIf=\"!noActions\">Actions</th>\n            <ng-container *ngFor=\"let obj of itemObj\">\n                <th *ngIf=\"!obj.hide && obj.type !== 'dropdown'\" [pSortableColumn]=\"obj.key\"\n                    [style.width]=\"obj.width + 'em'\">\n                    {{obj.value}} <p-sortIcon [field]=\"obj.key\"></p-sortIcon>\n                </th>\n                <th *ngIf=\"obj.type === 'dropdown'\" [innerHTML]=\"obj.value\"></th>\n            </ng-container>\n        </tr>\n        <tr>\n            <th *ngIf=\"showCheckBox\" style=\"width: 3em\">\n                <p-tableHeaderCheckbox *ngIf=\"!hideHeaderCheckBox\"></p-tableHeaderCheckbox>\n            </th>\n            <th *ngIf=\"!noActions\"></th>\n            <ng-container *ngFor=\"let obj of itemObj\">\n                <th *ngIf=\"!obj.hide && !noHeaderDropdown\" [style.width]=\"obj.width + 'em'\">\n                    <p-dropdown *ngIf=\"obj.type!=='multi-select'\" appendTo=\"body\" [filter]=\"true\"\n                        (onChange)=\"itemTable.filter($event.value ? $event.value[obj.key] : '', obj?.key, 'contains')\"\n                        [options]=\"filterDuplicates(items,obj.key, obj.keySet)\"\n                        placeholder=\"{{'Search By ' + obj.value}}\"\n                        [optionLabel]=\"obj.key\" [showClear]=\"true\">\n                    </p-dropdown>\n                </th>\n            </ng-container>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-item let-rowIndex=\"rowIndex\">\n        <tr class=\"text-center\" [pSelectableRow]=\"item\" [pSelectableRowDisabled]=\"item?.disableCheckbox\" *ngIf=\"item\">\n            <ng-container *ngIf=\"!item?.tempId;else newInput\">\n                <ng-container *ngIf=\"editItems.indexOf(item[uniqKey]) === -1;else showInput\">\n                    <td *ngIf=\"!noActions\">\n                        <p-radioButton class=\"radio-button\" *ngIf=\"showRadioInRows\" name=\"groupname\" [value]=\"item\"\n                            [(ngModel)]=\"radioSelectedValue\" (onClick)=\"selectValue()\"></p-radioButton>\n                        <button\n                            *ngIf=\"!onlyDelete\"\n                            pButton type=\"button\" icon=\"pi pi-pencil\" class=\"ui-button-info\"\n                            (click)=\"editRowItems(item)\"></button>\n                        <button pButton\n                            type=\"button\" icon=\"pi pi-trash\" class=\"ui-button-danger\"\n                            (click)=\"deleteItem(item[uniqKey])\"></button>\n                    </td>\n                    <td *ngIf=\"showCheckBox\" style=\"width: 3em\">\n                        <p-tableCheckbox [escape]=\"false\" [pTooltip]=\"item?.tooltipMsg\" [value]=\"item\"\n                            [disabled]=\"item?.disableCheckbox\">\n                        </p-tableCheckbox>\n                    </td>\n                    <ng-container *ngFor=\"let obj of itemObj\">\n                        <ng-container *ngIf=\"!obj.hide\">\n                            <td *ngIf=\"obj.keySet;else noSet\" [style.width]=\"obj.width + 'em'\">\n                                <div *ngFor=\"let set of item[obj?.key];let setInx = index;\" class=\"set-content\">\n                                    <span title=\"{{set}}\" class=\"ellipsis-content\">\n                                        {{set}}\n                                    </span>\n                                    <i title=\"Assignee info\" class=\"pi pi-info-circle\"\n                                        (click)=\"selectInfo(item[obj?.keySet][setInx],item)\"></i>\n                                </div>\n                            </td>\n                            <ng-template #noSet>\n                                <td [class.link]=\"obj.link\" *ngIf=\"obj.type!=='multi-select' && obj.type!=='dropdown'\"\n                                    (click)=\"obj?.action ? selectLink(item,$event) : ''\"\n                                    [style.width]=\"obj.width + 'em'\">\n                                    {{obj?.date ? (item[obj?.key] | date: 'dd MMM yyyy, HH:mm') : item[obj?.key]}}</td>\n                                <td *ngIf=\"obj.type==='multi-select'\" [style.width]=\"obj.width + 'em'\">\n                                    <div *ngFor=\"let option of item[obj.key]\">{{option.name}}</div>\n                                </td>\n                                <td *ngIf=\"obj.type === 'dropdown'\"\n                                    [class.changed]=\"item[obj.key + ',prevKeyVal'] && item[obj.key + ',prevKeyVal'] !== item[obj.key]\"\n                                    [style.width]=\"obj.width + 'em'\">\n                                    <p-dropdown (onChange)=\"item[obj.key] = $event?.originalEvent?.target?.innerText\"\n                                        [options]=\"profilesList\" *ngIf=\"obj.type==='dropdown'\"\n                                        placeholder=\"{{item[obj.key]}}\" [ngModel]=\"item[obj.key]\"\n                                        id=\"{{obj.key + '' + rowIndex}}\" required=\"true\" [autoWidth]=\"false\"\n                                        appendTo=\"body\">\n                                    </p-dropdown>\n                                </td>\n                            </ng-template>\n                        </ng-container>\n                    </ng-container>\n                </ng-container>\n            </ng-container>\n            <ng-template #newInput>\n                <td>\n                    <button pButton type=\"button\" icon=\"pi pi-check\" class=\"ui-button-success\"\n                        (click)=\"addNewItem(item)\"></button>\n                    <button pButton type=\"button\" icon=\"pi pi-times\" class=\"ui-button-danger\"\n                        (click)=\"removeRow(item)\"></button>\n                </td>\n                <ng-container *ngFor=\"let obj of itemObj;let index = index\">\n                    <ng-container *ngIf=\"!obj.hide\">\n                        <td *ngIf=\"obj.type!=='multi-select'\" [style.width]=\"obj.width + 'em'\">\n                            <div *ngIf=\"autoGenerateId && obj.key === uniqKey;else notAutoGenerTemp\">{{item[uniqKey]}}\n                            </div>\n                            <ng-template #notAutoGenerTemp>\n                                <input (keyup.enter)=\"addNewItem(item)\" *ngIf=\"obj.type!='drop-down'\" type=\"text\"\n                                    id=\"{{obj.key + '' + index}}\" pInputText [(ngModel)]=\"item[obj.key]\"\n                                    placeholder=\"{{'Please Enter ' + obj.value}}\">\n                                <p-dropdown [options]=\"obj.values || profilesList\" *ngIf=\"obj.type==='drop-down'\"\n                                    id=\"{{obj.key + '' + rowIndex}}\"\n                                    placeholder=\"{{'Please Enter ' + obj.value}}\"\n                                    required=\"true\" [(ngModel)]=\"item[obj.key]\"\n                                    [optionLabel]=\"obj.values?.length > 0 ? 'label' : 'profileName'\" [autoWidth]=\"false\"\n                                    appendTo=\"body\">\n                                </p-dropdown>\n                            </ng-template>\n                        </td>\n                        <td *ngIf=\"obj.type==='multi-select'\" [style.width]=\"obj.width + 'em'\">\n                            <p-multiSelect filter=\"true\" multiple=\"true\" appendTo=\"body\" checkbox=\"true\"\n                                [options]=\"obj.values\"\n                                [(ngModel)]=\"item[obj.key]\" optionLabel=\"name\">\n                            </p-multiSelect>\n                        </td>\n                    </ng-container>\n                </ng-container>\n            </ng-template>\n            <ng-template #showInput>\n                <td>\n                    <button pButton type=\"button\" icon=\"pi pi-check\" class=\"ui-button-success\"\n                        (click)=\"updateItem(item)\"></button>\n                    <button pButton type=\"button\" icon=\"pi pi-times\" class=\"ui-button-danger\"\n                        (click)=\"editCancel(item)\"></button>\n                </td>\n                <ng-container *ngFor=\"let obj of itemObj;let first = first\">\n                    <ng-container *ngIf=\"!obj.hide\">\n                        <td *ngIf=\"uniqKey === obj?.key\" [style.width]=\"obj.width + 'em'\">{{item[obj?.key]}}</td>\n                        <td *ngIf=\"uniqKey !== obj?.key && obj.type!=='multi-select'\" [style.width]=\"obj.width + 'em'\">\n                            <input (keyup.enter)=\"updateItem(item)\" *ngIf=\"obj.type!='drop-down'\" type=\"text\"\n                                id=\"{{obj.key + '' + rowIndex}}\" pInputText\n                                placeholder=\"{{'Please Enter ' + obj.value}}\"\n                                [(ngModel)]=\"item[obj.key]\">\n                            <p-dropdown [options]=\"obj.values || profilesList\" *ngIf=\"obj.type==='drop-down'\"\n                                placeholder=\"{{item[obj.key]}}\" id=\"{{obj.key + '' + rowIndex}}\"\n                                [(ngModel)]=\"item[obj.key]\" required=\"true\"\n                                [optionLabel]=\"obj.values?.length > 0 ? 'label' : 'profileName'\" [autoWidth]=\"false\"\n                                appendTo=\"body\">\n                            </p-dropdown>\n                        </td>\n                        <td *ngIf=\"obj.type==='multi-select'\" [style.width]=\"obj.width + 'em'\">\n                            <p-multiSelect filter=\"true\" multiple=\"true\" appendTo=\"body\" checkbox=\"true\"\n                                [options]=\"obj.values\" [(ngModel)]=\"item[obj.key]\" optionLabel=\"name\">\n                            </p-multiSelect>\n                        </td>\n                    </ng-container>\n                </ng-container>\n            </ng-template>\n        </tr>\n    </ng-template>\n</p-table>\n<div class=\"p-col-12\" [ngClass]=\"{'text-right': btnContents?.length > 1, 'text-center': btnContents?.length === 1}\"\n    *ngIf=\"btnContents?.length > 0\">\n    <ng-container *ngFor=\"let btn of btnContents\">\n        <button class=\"button-{{btn.styleClass}} btn-{{btn.width}}\" pButton type=\"button\"\n            label=\"{{btn.btnName}}\" (click)=\"btn.cancel ? cancelCheck() : saveItems()\"></button>\n    </ng-container>\n</div>\n<ng-template #noDataAv>\n    <div class=\"text-center no-data-content\">\n        No Data available\n    </div>\n</ng-template>\n  `,\n  styles: [\n    `\n    .radio-button {\n      margin-right: 10px;\n    }\n    .link {\n        color: #116fbf;\n    }\n    .ui-state-highlight {\n        .link {\n            color: #fff;\n        }\n    }\n    .set-content {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        i {\n            font-size: 24px;\n            color: #ffcc33;\n        }\n    }\n    `\n  ]\n})\nexport class NgxCustomDataTableComponent implements OnInit {\n\n  public radioSelectedValue = '';\n  public menus: any;\n  @Input() public uniqKey = '';\n  @Input() public autoGenerateId = false;\n  @Input() public keyOptional = false;\n  @Input() public showRadioInRows = false;\n  @Input() public showCheckBox = false;\n  @Input() public noActions = false;\n  @Input() public enableSelection = false;\n  @Input() public onlyDelete = false;\n  @Input() public sortOrder = 1;\n  @Input() public sortKey: string = this.uniqKey;\n  @Input() public hideHeaderCheckBox = false;\n  @Input() public btnContents: any = {};\n  @Input() public noHeaderDropdown = false;\n  @Input() set selectionChange(val: any) {\n    this.items = [...this.items.filter(x => x[this.uniqKey])];\n    this.addNewItems = [];\n    this.editCancel();\n  }\n  @Input() set tableList(val: any) {\n    if (this.rowInx) {\n      this.editCancel();\n      this.rowInx = '';\n    }\n    if (this.newItem) {\n      const newInx = this.addNewItems.findIndex(x => x[this.uniqKey] === this.newItem);\n      const itemInx = this.items.findIndex(x => x[this.uniqKey] === this.newItem);\n      delete this.items[itemInx].tempId;\n      this.addNewItems.splice(newInx, 1);\n      this.newItem = '';\n    }\n    if (val) {\n      this.items = [...this.addNewItems, ...val];\n      this.choosenItems = this.items.filter(x => x.chosen);\n    }\n  }\n  @Input() set tableKeysList(val: any) {\n    this.itemObj = val;\n  }\n\n  @Input() set tableProfileList(val: any) {\n    this.profilesList = val;\n  }\n  @Output() public selectedValueEmit: EventEmitter<any> = new EventEmitter<any>();\n  @Output() public confirmAdd: EventEmitter<any> = new EventEmitter<any>();\n  @Output() public confirmUpdate: EventEmitter<any> = new EventEmitter<any>();\n  @Output() public selectedLinkEmit: EventEmitter<any> = new EventEmitter<any>();\n  @Output() public confirmDelete: EventEmitter<any> = new EventEmitter<any>();\n  @Output() public closeDialog: EventEmitter<any> = new EventEmitter<any>();\n  @Output() public saveChoosenValues: EventEmitter<any> = new EventEmitter<any>();\n  @Output() public selectInfoEmit: EventEmitter<any> = new EventEmitter<any>();\n\n  public rowObj = {};\n  public editItems: any = [];\n  public clonedItems: any = {};\n  public items: any = [];\n  public itemObj: any = [];\n  public rowInx = '';\n  public addNewItems: any = [];\n  public newItem = '';\n  public choosenItems: any[] = [];\n  public processes: any;\n  public profilesList: any = [];\n  constructor() { }\n\n  ngOnInit() {\n    this.sortKey = this.sortKey || this.uniqKey;\n    this.sortOrder = this.sortOrder || 1;\n    this.itemObj.forEach(x => {\n      this.rowObj[x.key] = '';\n    });\n  }\n\n  addNewItem(item: any = {}) {\n    if (!item[this.uniqKey]) {\n      return;\n    }\n    /* const checkAllFields = this.checkEmptyFields(item);\n    if (!checkAllFields) {\n      return;\n    } */\n    this.newItem = item[this.uniqKey];\n    /* const validProfile = this.dropdownValidation(item);\n    const validEmail = this.emailValidation(item);\n    if (!validEmail || !validProfile) {\n      return;\n    } */\n    this.confirmAdd.emit({ item });\n  }\n\n  filterDuplicates(item, key, keySet: string = '') {\n    let noDuplicates = [];\n    item.forEach(x => {\n      const value = x[key];\n      if (value) {\n        if (Array.isArray(value)) {\n          noDuplicates = [...noDuplicates, ...value];\n        } else {\n          noDuplicates.push(value);\n        }\n      }\n    });\n    const filteredDuplicates = Array.from(new Set(noDuplicates));\n    const filteredData = filteredDuplicates.map(x => {\n      const obj = {};\n      obj[key] = x;\n      return obj;\n    });\n    return filteredData;\n  }\n\n  emailValidation(item: any = {}): boolean {\n    const isEmail = this.itemObj.find(x => x.email);\n    if (isEmail && isEmail['key']) {\n      const emailVal = item[isEmail['key']];\n      const emailPattern = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/;\n      if (!emailPattern.test(emailVal)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  dropdownValidation(item: any = {}): boolean {\n    const isProfil = item['profileName'];\n    if (isProfil === '') {\n      return false;\n    }\n    return true;\n  }\n  editCancel(uniqKey?: string) {\n    const key = uniqKey ? uniqKey[this.uniqKey] : this.rowInx;\n    const rowToCancel = this.editItems.indexOf(key);\n    const index = this.items.findIndex(x => x[this.uniqKey] === key);\n    this.editItems.splice(rowToCancel, 1);\n    this.items[index] = { ...this.clonedItems[key] };\n    this.clonedItems[key] = {};\n  }\n\n  updateItem(item: any = {}) {\n    this.rowInx = item[this.uniqKey];\n    /* const checkAllFields = this.checkEmptyFields(item);\n    if (!checkAllFields) {\n      return;\n    }\n    const validProfile = this.dropdownValidation(item);\n    const validEmail = this.emailValidation(item);\n    if (!validEmail || !validProfile) {\n      return;\n    } */\n    this.confirmUpdate.emit(item);\n  }\n\n  checkEmptyFields(item: any) {\n    const values = Object.values(item);\n    const checkEmpty = values.indexOf('');\n    const key = Object.keys(item)[checkEmpty];\n    if (checkEmpty !== -1) {\n      return false;\n    }\n    return true;\n  }\n\n  removeRow(item) {\n    const newInx = this.addNewItems.findIndex(x => x.tempId === item.tempId);\n    const itemInx = this.items.findIndex(x => x.tempId === item.tempId);\n    this.addNewItems.splice(newInx, 1);\n    this.items.splice(itemInx, 1);\n  }\n\n  editRowItems(item: any = {}) {\n    const uniqKey = this.uniqKey;\n    this.editItems.push(item[uniqKey]);\n    const cloned = this.items.find(x => x[uniqKey] === item[uniqKey]);\n    this.clonedItems[item[uniqKey]] = { ...cloned };\n  }\n\n  deleteItem(id: string) {\n    this.confirmDelete.emit(id);\n  }\n\n  getNextGroupId() {\n    let maxGroupId = 0;\n    let nextGroupId = 0;\n    this.items.forEach(x => {\n      if (!isNaN(x[this.uniqKey])) {\n        if (maxGroupId < x[this.uniqKey]) {\n          maxGroupId = x[this.uniqKey];\n        }\n      }\n    });\n    nextGroupId = +maxGroupId + 1;\n    return nextGroupId;\n  }\n\n  addNew() {\n    const obj: any = { ...this.rowObj };\n    obj.tempId = this.items.length + 1;\n    if (this.autoGenerateId) {\n      obj[this.uniqKey] = this.getNextGroupId();\n    }\n    if (this.keyOptional) {\n      obj[this.uniqKey] = obj.tempId;\n    }\n    this.addNewItems.unshift(obj);\n    this.items.unshift(obj);\n  }\n\n  selectValue() {\n    this.selectedValueEmit.emit(this.radioSelectedValue);\n  }\n\n  selectInfo(set: any, item: any) {\n    const selectedItem = { ...item, ...set };\n    this.selectInfoEmit.emit(selectedItem);\n  }\n\n  selectLink(selectedItem: any = {}, $event: any = {}) {\n    if ($event) {\n      $event.stopPropagation();\n    }\n    this.selectedLinkEmit.emit(selectedItem);\n  }\n\n  saveItems() {\n    this.saveChoosenValues.emit(this.choosenItems);\n  }\n\n  cancelCheck() {\n    this.closeDialog.emit(true);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxCustomDataTableComponent } from './ngx-custom-data-table.component';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { TableModule } from 'primeng/table';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { ButtonModule } from 'primeng/button';\n\n@NgModule({\n  declarations: [NgxCustomDataTableComponent],\n  imports: [\n    RadioButtonModule,\n    TableModule,\n    TooltipModule,\n    DropdownModule,\n    CheckboxModule,\n    MultiSelectModule,\n    CommonModule,\n    FormsModule,\n    ButtonModule\n  ],\n  exports: [NgxCustomDataTableComponent]\n})\nexport class NgxCustomDataTableModule { }\n"]}